#tell me how to write a script that scraps https://api.guildwars2.com/v2/achievements/daily for pve dailies and outputs the info to a twitterbot

To write a script that scrapes https://api.guildwars2.com/v2/achievements/daily for PvE dailies and outputs the information to a Twitter bot, you can follow the steps below:

Choose a programming language to use for the script. Python is a popular language for web scraping and interacting with APIs, and there are several libraries available for working with Twitter's API, such as Tweepy.

Install the necessary libraries for your chosen programming language. For Python, you can install requests library to make HTTP requests and get the JSON response from the Guild Wars 2 API. You will also need Tweepy for posting on Twitter.

Use the requests library to send a GET request to https://api.guildwars2.com/v2/achievements/daily to retrieve the daily achievements data in JSON format.

Parse the JSON data to extract the PvE dailies information. The JSON response contains information for all types of dailies, so you'll need to filter the results for the PvE dailies.

Use Tweepy to connect to your Twitter account and post the PvE dailies information as a tweet.

Here's a sample Python script that does what you're asking:

python
import requests
import tweepy

# Set up Twitter API credentials
consumer_key = 'your_consumer_key'
consumer_secret = 'your_consumer_secret'
access_token = 'your_access_token'
access_token_secret = 'your_access_token_secret'

# Authenticate with Twitter API
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

# Get PvE dailies from Guild Wars 2 API
response = requests.get('https://api.guildwars2.com/v2/achievements/daily')
json_data = response.json()

pve_dailies = []
for category in json_data['pve']:
    for achievement in category['achievements']:
        pve_dailies.append(achievement['name'])

# Post PvE dailies to Twitter
message = 'Today\'s PvE dailies: ' + ', '.join(pve_dailies)
api.update_status(message)

You'll need to replace the placeholders for your Twitter API credentials with your actual credentials. You can run this script once a day using a task scheduler or a cloud-based function, like AWS Lambda or Google Cloud Functions.
